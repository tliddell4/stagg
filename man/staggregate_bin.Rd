% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/staggregate.R
\name{staggregate_bin}
\alias{staggregate_bin}
\title{Bin transformation and aggregation of climate data}
\usage{
staggregate_bin(
  data,
  overlay_weights,
  daily_agg,
  time_agg = "month",
  start_date = NA,
  time_interval = "1 hour",
  bin_breaks
)
}
\arguments{
\item{data}{The raster brick with the data to be transformed and aggregated}

\item{overlay_weights}{A table of weights which can be generated using the
function \code{overlay_weights()}}

\item{daily_agg}{How to aggregate hourly values to daily values prior to
transformation. Options are \code{'sum'}, \code{'average'}, or \code{'none'} (\code{'none'}
will transform values without first aggregating to the daily level)}

\item{time_agg}{the temporal scale to aggregate data to. Options are
\code{'hour'}, \code{'day'}, \code{'month'}, or \code{'year'} (\code{'hour'} cannot be selected
unless \code{daily_agg = 'none'})}

\item{start_date}{the date (and time, if applicable) of the first layer in
the raster. To be input in a format compatible with
lubridate::as_datetime(), e.g. \code{"1991-10-29"} or \code{"1991-10-29 00:00:00"}.
The default is \code{NA} since the rasters usually already contain temporal
information in the layer names and they do not need to be manually supplied.}

\item{time_interval}{the time interval between layers in the raster to be
aggregated. To be input in a format compatible with seq(), e.g.
\code{'1 day'} or \code{'3 months'}. The default is \code{'1 hour'} and this argument is
required if daily_agg is not \code{'none'} or if the \code{start_date} argument is not
\code{NA}.}

\item{bin_breaks}{A vector of bin boundaries to split the data by}
}
\description{
The function \code{staggregate_bin()} aggregates climate data to the daily level,
splits these daily values into bins, and aggregates the transformed
values to the polygon level and desired temporal scale.
}
\examples{
bin_output <- staggregate_bin(
  data = terra::rast(temp_nj_jun_2024_era5) - 273.15, # Climate data to transform and
                                         # aggregate
  overlay_weights = overlay_weights_nj, # Output from overlay_weights()
  daily_agg = "average", # Average hourly values to produce daily values
                         # before transformation
  time_agg = "month", # Sum the transformed daily values across months
  start_date = "2024-06-01 00:00:00", # The start date of the supplied data,
                                      # only required if the layer name
                                      # format is not compatible with stagg
  time_interval = "1 hour", # The temporal interval of the supplied data,
                            # required if daily_agg is not "none" or if the
                            # start_date argument is not NA
  bin_breaks = c(0, 2.5, 5, 7.5, 10) # Draw 6 bins from ninf to 0, 0 to 2.5,
                                     # 2.5 to 5, 5 to 7.5, 7.5 to 10, 10 to
                                     # inf
  )

head(bin_output)

}
